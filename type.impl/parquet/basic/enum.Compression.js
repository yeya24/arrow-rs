(function() {
    var type_impls = Object.fromEntries([["parquet",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#745\">Source</a><a href=\"#impl-Clone-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#745\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","parquet::file::metadata::thrift_gen::CompressionCodec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#817-823\">Source</a><a href=\"#impl-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.codec_to_string\" class=\"method\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#820-822\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"parquet/basic/enum.Compression.html#tymethod.codec_to_string\" class=\"fn\">codec_to_string</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Returns the codec type of this compression setting as a string, without the compression\nlevel.</p>\n</div></details></div></details>",0,"parquet::file::metadata::thrift_gen::CompressionCodec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#745\">Source</a><a href=\"#impl-Debug-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#745\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","parquet::file::metadata::thrift_gen::CompressionCodec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#1248-1252\">Source</a><a href=\"#impl-Display-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#1249-1251\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","parquet::file::metadata::thrift_gen::CompressionCodec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#857-905\">Source</a><a href=\"#impl-FromStr-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#858\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"parquet/errors/enum.ParquetError.html\" title=\"enum parquet::errors::ParquetError\">ParquetError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#860-904\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/nightly/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","parquet::file::metadata::thrift_gen::CompressionCodec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HeapSize-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/file/metadata/memory.rs.html#147-151\">Source</a><a href=\"#impl-HeapSize-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"parquet/file/metadata/memory/trait.HeapSize.html\" title=\"trait parquet::file::metadata::memory::HeapSize\">HeapSize</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.heap_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parquet/file/metadata/memory.rs.html#148-150\">Source</a><a href=\"#method.heap_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parquet/file/metadata/memory/trait.HeapSize.html#tymethod.heap_size\" class=\"fn\">heap_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the size of any bytes allocated on the heap by this object,\nincluding heap memory in those structures <a href=\"parquet/file/metadata/memory/trait.HeapSize.html#tymethod.heap_size\">Read more</a></div></details></div></details>","HeapSize","parquet::file::metadata::thrift_gen::CompressionCodec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#745\">Source</a><a href=\"#impl-PartialEq-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#745\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","parquet::file::metadata::thrift_gen::CompressionCodec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReadThrift%3C'a,+R%3E-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#766-781\">Source</a><a href=\"#impl-ReadThrift%3C'a,+R%3E-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, R: <a class=\"trait\" href=\"parquet/parquet_thrift/trait.ThriftCompactInputProtocol.html\" title=\"trait parquet::parquet_thrift::ThriftCompactInputProtocol\">ThriftCompactInputProtocol</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"parquet/parquet_thrift/trait.ReadThrift.html\" title=\"trait parquet::parquet_thrift::ReadThrift\">ReadThrift</a>&lt;'a, R&gt; for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_thrift\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#767-780\">Source</a><a href=\"#method.read_thrift\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parquet/parquet_thrift/trait.ReadThrift.html#tymethod.read_thrift\" class=\"fn\">read_thrift</a>(prot: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"type\" href=\"parquet/errors/type.Result.html\" title=\"type parquet::errors::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Read an object of type <code>Self</code> from the input protocol object.</div></details></div></details>","ReadThrift<'a, R>","parquet::file::metadata::thrift_gen::CompressionCodec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteThrift-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#786-802\">Source</a><a href=\"#impl-WriteThrift-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"parquet/parquet_thrift/trait.WriteThrift.html\" title=\"trait parquet::parquet_thrift::WriteThrift\">WriteThrift</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ELEMENT_TYPE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#787\">Source</a><a href=\"#associatedconstant.ELEMENT_TYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"parquet/parquet_thrift/trait.WriteThrift.html#associatedconstant.ELEMENT_TYPE\" class=\"constant\">ELEMENT_TYPE</a>: <a class=\"enum\" href=\"parquet/parquet_thrift/enum.ElementType.html\" title=\"enum parquet::parquet_thrift::ElementType\">ElementType</a> = ElementType::I32</h4></section></summary><div class='docblock'>The <a href=\"parquet/parquet_thrift/enum.ElementType.html\" title=\"enum parquet::parquet_thrift::ElementType\"><code>ElementType</code></a> to use when a list of this object is written.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_thrift\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#789-801\">Source</a><a href=\"#method.write_thrift\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parquet/parquet_thrift/trait.WriteThrift.html#tymethod.write_thrift\" class=\"fn\">write_thrift</a>&lt;W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>&gt;(\n    &amp;self,\n    writer: &amp;mut <a class=\"struct\" href=\"parquet/parquet_thrift/struct.ThriftCompactOutputProtocol.html\" title=\"struct parquet::parquet_thrift::ThriftCompactOutputProtocol\">ThriftCompactOutputProtocol</a>&lt;W&gt;,\n) -&gt; <a class=\"type\" href=\"parquet/errors/type.Result.html\" title=\"type parquet::errors::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Serialize this object to the given <code>writer</code>.</div></details></div></details>","WriteThrift","parquet::file::metadata::thrift_gen::CompressionCodec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteThriftField-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#804-815\">Source</a><a href=\"#impl-WriteThriftField-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"parquet/parquet_thrift/trait.WriteThriftField.html\" title=\"trait parquet::parquet_thrift::WriteThriftField\">WriteThriftField</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_thrift_field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#805-814\">Source</a><a href=\"#method.write_thrift_field\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parquet/parquet_thrift/trait.WriteThriftField.html#tymethod.write_thrift_field\" class=\"fn\">write_thrift_field</a>&lt;W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>&gt;(\n    &amp;self,\n    writer: &amp;mut <a class=\"struct\" href=\"parquet/parquet_thrift/struct.ThriftCompactOutputProtocol.html\" title=\"struct parquet::parquet_thrift::ThriftCompactOutputProtocol\">ThriftCompactOutputProtocol</a>&lt;W&gt;,\n    field_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>,\n    last_field_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>,\n) -&gt; <a class=\"type\" href=\"parquet/errors/type.Result.html\" title=\"type parquet::errors::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Used to write struct fields (which may be primitive or IDL defined types). This will\nwrite the field marker for the given <code>field_id</code>, using <code>last_field_id</code> to compute the\nfield delta used by the Thrift <a href=\"https://github.com/apache/thrift/blob/master/doc/specs/thrift-compact-protocol.md#struct-encoding\">compact protocol</a>. On success this will return <code>field_id</code>\nto be used in chaining.</div></details></div></details>","WriteThriftField","parquet::file::metadata::thrift_gen::CompressionCodec"],["<section id=\"impl-Copy-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#745\">Source</a><a href=\"#impl-Copy-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section>","Copy","parquet::file::metadata::thrift_gen::CompressionCodec"],["<section id=\"impl-Eq-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#745\">Source</a><a href=\"#impl-Eq-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section>","Eq","parquet::file::metadata::thrift_gen::CompressionCodec"],["<section id=\"impl-StructuralPartialEq-for-Compression\" class=\"impl\"><a class=\"src rightside\" href=\"src/parquet/basic.rs.html#745\">Source</a><a href=\"#impl-StructuralPartialEq-for-Compression\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"parquet/basic/enum.Compression.html\" title=\"enum parquet::basic::Compression\">Compression</a></h3></section>","StructuralPartialEq","parquet::file::metadata::thrift_gen::CompressionCodec"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[21579]}